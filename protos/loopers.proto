syntax = "proto3";

package protos;

service Looper {
    rpc GetState(GetStateReq) returns (stream State) {}
    rpc Command(CommandReq) returns (CommandResp) {}
}

enum LooperMode {
    NONE = 0;
    READY = 1;
    RECORD = 2;
    OVERDUB = 3;
    PLAYING = 4;
    STOPPING = 5;
}

message GetStateReq {
}

message LoopState {
    uint32 id = 1;
    LooperMode mode = 2;
    int64 time = 4;
    int64 length = 5;
    bool active = 6;
}

message State {
    repeated LoopState loops = 1;
    int64 time = 2;
    int64 length = 3;
    uint64 beat = 4;
    float bpm = 5;
    uint64 time_signature_upper = 6;
    uint64 time_signature_lower = 7;
}

message CommandReq {
    Command command = 1;
}

enum CommandStatus {
    ACCEPTED = 0;
    FAILED = 1;
}
message CommandResp {
    CommandStatus status = 1;
}

enum LooperCommandType {
    STOP = 0;
    ENABLE_RECORD = 1;
    ENABLE_READY = 2;
    ENABLE_OVERDUB = 3;
    ENABLE_MUTIPLY = 4;
    ENABLE_PLAY = 5;

    SELECT = 6;
    DELETE = 7;
}

message LooperCommand {
    LooperCommandType command_type = 1;
    repeated uint32 loopers = 2;
}

enum GlobalCommandType {
    RESET_TIME = 0;
    ADD_LOOPER = 1;
}

message GlobalCommand {
    GlobalCommandType command = 1;
}

message Command {
    oneof command_oneof {
        LooperCommand looper_command = 1;
        GlobalCommand global_command = 2;
    }
}
